name: Lint & Build

on:
  pull_request:
    branches:
      - develop
      - main

permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: preview
      url: ${{ vars.DEPLOYMENT_URL }}
    steps:
      - name: Repository checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'
      - name: Retrive caches
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ hashFiles('yarn.lock') }}
      - name: Enable corepack
        run: corepack enable
      - name: Install project
        run: yarn install --immutable
      - name: Check Prettier
        run: yarn prettier:check
      - name: Lint
        run: yarn lint
      - name: Generate lint failure report
        if: failure()
        run: yarn lint:report
      - name: Annotate Code Linting Results
        if: failure()
        uses: ataylorme/eslint-annotate-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          report-json: 'eslint-report.json'
      - name: Build
        run: yarn build
        env:
          VITE_API_URL: ${{ vars.VITE_API_URL }}
          VITE_REDIRECT_URI: ${{ vars.VITE_REDIRECT_URI }}
          VITE_REST_API_KEY: ${{ secrets.VITE_REST_API_KEY }}
      - name: Compress build artifacts
        if: github.base_ref == 'develop'
        run: tar -cvf ./dist.tar ./dist
      - name: Upload with SCP
        if: github.base_ref == 'develop'
        uses: appleboy/scp-action@v0.1.7
        with:
          username: ubuntu
          host: ${{ secrets.SSH_HOST }}
          key: ${{ secrets.SSH_KEY }}
          source: 'dist.tar'
          target: '/home/ubuntu/'
      - name: Extract artifact with SSH
        if: github.base_ref == 'develop'
        uses: appleboy/ssh-action@v1.2.0
        with:
          username: ubuntu
          host: ${{ secrets.SSH_HOST }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            tar -xvf ./dist.tar ./dist
            sudo rm -rf ${{ vars.DEPLOYMENT_PATH }}
            sudo mv ./dist ${{ vars.DEPLOYMENT_PATH }}
            rm -rf ./dist
            rm -f ./dist.tar
